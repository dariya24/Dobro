import config
import telebot
from telebot import types
from data import get_data
import datetime
from event import Event
from people import update
bot = telebot.TeleBot(config.token)

@bot.message_handler(commands=["start"])
def repeat_all_messages(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏, –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ

    print(type(message.chat.id))

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –î–∞–≤–∞–π —Ä–æ–±–∏—Ç–∏ –¥–æ–±—Ä–æ —Ä–∞–∑–æ–º. –©–æ–± –ø—Ä–∏–π–Ω—è—Ç–∏ —á–µ–ª–µ–Ω–¥–∂ –Ω–∞–ø–∏—à–∏ /take. –Ø–∫—â–æ —Ç–∏ –≤–∂–µ –≤–∏–∫–æ–Ω–∞–≤ —á–µ–ª–µ–Ω–¥–∂ –Ω–∞–ø–∏—à–∏ /end")


@bot.message_handler(commands=["take"])
def get_time(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏, –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ
    markup = types.ReplyKeyboardMarkup()
    for element in ['–ú–µ–Ω—à–µ –ø—ñ–≤ - –≥–æ–¥–∏–Ω–∏', '–ì–æ–¥–∏–Ω—É-–¥–≤—ñ', '–ë—ñ–ª—å—à–µ –¥–≤–æ—Ö –≥–æ–¥–∏–Ω']:
        markup.row(element)
    bot.send_message(message.chat.id, "–°–∫—ñ–ª—å–∫–∏ –≤ —Ç–µ–±–µ —î —á–∞—Å—É?", reply_markup=markup)


@bot.message_handler(commands=["end"])
def get_time(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏, –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ
    bot.send_message(message.chat.id, "üéâ–í—ñ—Ç–∞—î–º–æüéâ\n –©–æ–± –±—ñ–ª—å—à–µ –ª—é–¥–µ–π –¥—ñ–∑–Ω–∞–ª–æ—Å—å –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç, —Ä–æ–∑–∫–∞–∂–∏ —ó–º –ø—Ä–æ —Ü–µ –≤ –§—É–π—Å–±—É—Ü—ñ —á–∏ —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º—ñ –ø–æ–∑–Ω–∞—á–∞—é—á–∏ –æ—Ñ—ñ—Ü—ñ–π–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ë—Ä–∞—Ç—Å—Ç–≤–∞ —Ç–∞ –Ω–∞—à —Ö–µ—à—Ç–µ–≥ #48–¥–æ–±—Ä–∏—Ö—Å–ø—Ä–∞–≤. \n\n–Ø–∫—â–æ –∂ —Ç–∏ –≥–æ—Ç–æ–≤–∏–π –ø—Ä–∏–π–Ω—è—Ç–∏ —â–µ –æ–¥–∏–Ω —á–µ–ª–µ–Ω–¥–∂. –ù–∞–ø–∏—à–∏: /take")

@bot.message_handler(content_types=["text"])
def print_info(message):
    if message.text == '–ú–µ–Ω—à–µ –ø—ñ–≤ - –≥–æ–¥–∏–Ω–∏' or message.text == '–ì–æ–¥–∏–Ω—É-–¥–≤—ñ' or message.text == '–ë—ñ–ª—å—à–µ –¥–≤–æ—Ö –≥–æ–¥–∏–Ω':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, "–î–∞–π –º–µ–Ω—ñ —Ö–≤–∏–ª–∏–Ω–∫—É, –º–∏ —à—É–∫–∞—î–º–æ —â–æ—Å—å —Å–∞–º–µ –¥–ª—è —Ç–µ–±–µ....", reply_markup=markup)

        options = find_work(message)
        if not options:
            bot.send_message(message.chat.id, '–£–ø—Å, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫... –°–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –¥–µ–∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω, –±—É–¥—å –ª–∞—Å–∫–∞!')
            bot.send_message(440533550, '–¢–∞–±–∏—Ü—è –ø—É—Å—Ç–∞...')

        message_text = '';
        markup = types.ReplyKeyboardMarkup()
        c = 1
        for option in options:
            markup.row('–î–æ–±—Ä–∞ —Å–ø—Ä–∞–≤–∞ #' + str(c) +'\n' + option.work)
            message_text = message_text + option.toString() + '\n\n\n'

            c+=1;

        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä–∏ —â–æ—Å—å –∑ –ø–µ—Ä–µ–ª—ñ–∫—É –Ω–∏–∂—á–µ: "+'\n'+message_text, reply_markup=markup)
        markup = None

    elif message.text.startswith('–î–æ–±—Ä–∞ —Å–ø—Ä–∞–≤–∞'):
        markup = types.ReplyKeyboardRemove()
        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–î—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç",
                                                url="https://www.facebook.com/studentsbrotherhoodUCU/")
        keyboard.add(url_button)
        bot.send_message(message.chat.id, "–ö–æ–ª–∏ –∑–∞–∫—ñ–Ω—á–∏—à —á–µ–ª–µ–Ω–¥–∂ –Ω–µ –∑–∞–±—É—Ç—å –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –Ω–∞–º, –Ω–∞–¥—ñ—Å–ª–∞–≤—à–∏ /end", reply_markup=markup)
        bot.send_message(message.chat.id,
                         "–ê —Ç–∞–∫–æ–∂ —Ä–æ–±–∏—Ç–∏ –∑–∞–º—ñ—Ç–∫—É –ø—Ä–æ —Ü–µ –≤ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö –∑ —Ö–µ—à—Ç–µ–≥–æ–º #48–¥–æ–±—Ä–∏—Ö —Å–ø—Ä–∞–≤.  üòâ",
                         reply_markup=keyboard)
    else:
        pass
        #—á–µ–∫–Ω—É—Ç–∏ —á–∏ —Ü–µ –æ–ø—Ü—ñ—è —ñ —è–∫—â–æ —Ç–∞–∫ —Ç–æ
        #–∑–∞–ø–∏—Å–∞—Ç–∏ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö, —è–∫—É –æ–ø—Ü—ñ—é –≤–∏–±—Ä–∞–ª–∞ –ª—é–¥–∏–Ω–∞

def find_work(message):
    options = []
    #try:
    data = get_data()
    if data:
        for row in data:
            if row[0][0] != '–î':
                if message.text == '–ú–µ–Ω—à–µ –ø—ñ–≤ - –≥–æ–¥–∏–Ω–∏' and float(row[1].replace(',', '.')) <= 0.5:
                    event = Event(row)
                    options.append(event)
                elif message.text == '–ì–æ–¥–∏–Ω—É-–¥–≤—ñ'and float(row[1].replace(',', '.')) < 2:
                    event = Event(row)
                    options.append(event)
                elif message.text == '–ë—ñ–ª—å—à–µ –¥–≤–æ—Ö –≥–æ–¥–∏–Ω':
                    event = Event(row)
                    options.append(event)

    for option in options:
        pass
        #—è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —î, —Ç–æ –≤–∏–¥–∞–ª–∏—Ç–∏

    print(options[:3])
    return options[:3]

if __name__ == '__main__':
    bot.polling(none_stop=True)


# time
# options
# send coord info
# save what option user had chosen